{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","height","width","class","role","onClick","toggleMode","forHTML","TextForm","useState","text","setText","color","heading","value","onChange","e","target","rows","backgroundColor","txt","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","word","lower","charAt","slice","Capitalize","msg","App","setAlert","message","setTimeout","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.acc4f13c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\"> */}\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {/* we use Link instead of anchor tag a and to instead of href so that\r\n            the page would not be reload when we go from one page (component) to\r\n            other. */}\r\n            {props.title}\r\n            {/* </Link> */}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                  {/* </Link> */}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                 {/* <Link className=\"nav-link\" to=\"/About\">\r\n                {props.aboutText}  // or About\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n           \r\n           <div className=\"d-flex\">\r\n          <div className=\"bg -primary rounded mx-2\" style={{height:'30px',width:'30px'}}></div>\r\n\r\n           </div>\r\n            <div\r\n              class={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                forHTML=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  //text = \"new text\"; // Wrong way to change the state\r\n  //setText(\"new text\"); //  correct way to change the state\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let txt = text.toUpperCase();\r\n    setText(txt);\r\n    props.showAlert(\"Converted to uppercase!\",\"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let txt = text.toLowerCase();\r\n    setText(txt);\r\n    props.showAlert(\"Converted to lowercase!\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    // console.log(\"on Change\");\r\n    setText(e.target.value); //or we can just use setText(e.value).\r\n  };\r\n\r\n  const handleOnClear = () => {\r\n    setText(\" \");\r\n    props.showAlert(\"cleared!\",\"success\");\r\n  };\r\n\r\n  const handleOnCopy = () => {\r\n    /* Get the text field */\r\n    var copyText = document.getElementById(\"myBox\");\r\n    /* Select the text field */\r\n    copyText.select();\r\n    //copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n    /* Copy the text inside the text field */\r\n    navigator.clipboard.writeText(copyText.value);\r\n\r\n    /* Alert the copied text */\r\n    // alert(\"Copied the text: \");\r\n\r\n    props.showAlert(\"Copied to clickboard!\",\"success\");\r\n  };\r\n\r\n  const handleOnRemove = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"removed extra white space!\",\"success\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"  style={{color: props.mode === \"dark\" ? \"white\" : \"#042743\"}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control border-4\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"#042743\"\r\n            }} /*declaring a object inside the html thats why there is two curly braces first one if for writing the javascript inside the html and other one is the for javascript object. and we know very well that bable is render the javascript code into the html code */\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-1\" onClick={handleUpClick} >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-1 mx-1\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary my-1 mx-1\"\r\n          onClick={handleOnClear}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary my-1 mx-1\"\r\n          onClick={handleOnCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary my-1 mx-1\"\r\n          onClick={handleOnRemove}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"#042743\"}}>\r\n        <h1>Your text summaary</h1>\r\n        <p>\r\n          <b>{text.split(\" \").length - 1}</b> words and <b>{text.length}</b>{\" \"}\r\n          characters\r\n        </p>\r\n        <p>\r\n          <b>{0.008 * text.split(\" \").length}</b> minutes to read\r\n        </p>\r\n        <h1>Preview</h1>\r\n        <p>{text.length > 0 ? text:\"Enter something in the textbox to preview to here:\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nfunction Alert(props) {\r\n    const Capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong> {Capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","//import logo from './logo.svg';\nimport \"./App.css\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\"> */}\n              \n              {/* to purpose of use exact keyword is bez the router matches the\n              path partially thats why we use the keyword exact  like -below suppose we render for component2 and it reached at component 1 bez of partially matching\n              suppose path1 is-- /users --> for component1 \n              path2 is--  /users/home ---> component2\n              */}\n              {/* <About /> */}\n            {/* </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}